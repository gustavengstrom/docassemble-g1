metadata:
  title: |
    ESRS-G1-2
  short title: |
    Governance 1-2&#58; Management of relationships with suppliers
  show login: False
  description: |
    The undertaking shall provide information about the management of its relationships with its suppliers and its impacts on its supply chain. All questions marked with * are voluntary. If unsure, leave blank. 
  revision_date: 2024-12-30
---
modules:
  - .post
---
features:
  #css: sds.css # local CSS pointer ## goood tutorial for styling da: https://www.youtube.com/watch?v=6a3sER5MOK8
  popover trigger: hover # how to display interactive content/hyperlinks
  bootstrap theme: https://bootswatch.com/5/flatly/bootstrap.min.css
  navigation: True
  progress bar: True
  show progress bar percentage: True
  progressive: True
  inverse navbar: False
  hide navbar: True
  question help button: True
---
field: intro_screen
question: |
  Governance 1-2&#58; Management of relationships with suppliers
subquestion: |
  The undertaking shall provide information about the management of its relationships with its suppliers and its impacts on its supply chain. All questions marked with * are voluntary. If unsure, leave blank.

  To get started, press **Continue**.
help:
  label: Help?
  heading: <BR><h6>Explanation</h6>
  content: |
    The undertaking shall provide information about the management of its relationships with its suppliers and its impacts on its supply chain.
---
reset:
  - validate_status
---
mandatory: True
code: |
  multi_user = True
  guest_member = None

  # If not local browser session (device_local) has a token attribute then we look if it has been submitted as a query param
  # This works together with reset validate_status to ensure that every refresh and browser start token validity is checked
  if not hasattr(device_local, 'token'):
    device_local.token = url_args.get("token", "token_arg_not_found")
  # if "token" in url_args:
  #   del url_args["token"]

  django_hostname = os.environ.get("DJANGOHOSTNAME")
  login_url = f"https://{django_hostname}/accounts/login/"

  intro_screen
  validate_status, validate_content = validate_session(device_local.token)
  if validate_status != 200:
     invalid_token_screen
  else:
    session_info = json.loads(validate_content)
    board_id = session_info.get("board_id", "")
    survey_id = session_info.get("survey_id", "")
    guest_member = session_info.get("guest_member")
    external = session_info.get("external")
    include_question_ids = session_info.get("include_question_ids")
    
  if guest_member:
    redirect_url = "https://www.beyondcsrd.se"
  else:
    redirect_url = f"https://{django_hostname}/pages/{board_id}/{survey_id}/completed/?submitted=1"

  if external:
    external_organisation_name
  else:
    external_organisation_name = None

  question_ids = ["G1_2_1", "G1_2_2", "G1_2_3", "G1_2_4", "G1_2_5", "G1_2_6"]

  if include_question_ids: 
    for question_id in question_ids:
        if not question_id in include_question_ids:
          define(question_id, "")
          
  else:
    include_question_ids = question_ids
    

  # This is needed so we can filter active interviews on board_id
  session_tags().add(board_id)
  session_tags().add(board_id+"__"+survey_id)

  survey_data = []
  survey_data.append({'name': 'Does the undertaking have a policy to prevent late payments, especially to SMEs?', 'value': G1_2_1 if G1_2_1!='None' else '', 'id': 'G1_2_1', 'answer_type': 'Yes/No/Partly', 'included': 'G1_2_1' in include_question_ids})
  if not defined('G1_2_2'):
    define('G1_2_2', '_n/a_')
  survey_data.append({'name': 'Please explain why there are not any policies in place, if applicable, regarding late payments, supply chain relationships, and partners&#x27; social and environmental policies?', 'value': G1_2_2, 'id': 'G1_2_2', 'answer_type': 'OPEN', 'condition': 'G1_2_1', 'condition_criteria': 'No', 'included': 'G1_2_2' in include_question_ids})
  if not defined('G1_2_3'):
    define('G1_2_3', '_n/a_')
  survey_data.append({'name': 'Please disclose the timeframe in which the undertaking aims to adopt policies.', 'value': G1_2_3, 'id': 'G1_2_3', 'answer_type': 'OPEN', 'condition': 'G1_2_1', 'condition_criteria': 'No', 'included': 'G1_2_3' in include_question_ids})
  if not defined('G1_2_4'):
    define('G1_2_4', '_n/a_')
  survey_data.append({'name': 'Please describe the policy to prevent late payments, especially to SMEs.', 'value': G1_2_4, 'id': 'G1_2_4', 'answer_type': 'OPEN', 'condition': 'G1_2_1', 'condition_criteria': 'Yes/Partly', 'included': 'G1_2_4' in include_question_ids})
  survey_data.append({'name': 'Please describe the undertaking&#x27;s approach to relationships with suppliers, taking into account risks related to supply chain and impacts on sustainability matters.', 'value': G1_2_5, 'id': 'G1_2_5', 'answer_type': 'OPEN', 'included': 'G1_2_5' in include_question_ids})
  survey_data.append({'name': 'Please describe how social and environmental criteria are taken into account for selection of supply-side contractual partners.', 'value': G1_2_6, 'id': 'G1_2_6', 'answer_type': 'OPEN', 'included': 'G1_2_6' in include_question_ids})

  card_title = 'g1-2'
  card_description = ''
  # Description section in the wekan board - need to be composed with markdown and be populated with datapartner_url from the intervfile_uploadsiew.
  card_title = f"{card_title}"
  card_description = f"{card_description}"
  
  email_title = 'g1-2'
  #! Email compose for outgoing email.
  email_body = f"Dear Partner, <br> <br> This is an automated message to confirm we have recieved the form - {email_title}.  <br> <br> Best regards <br> reportAll Team."
  
  email_data = [
      {
          "subject": email_title,
          "body": email_body,
          "recipients": [],
          "from": "info@reportall.se",
      }
  ]

  survey_data_ids = [d['id'] for d in survey_data]
  survey_analytics = []
  survey_analytics.append({"id": "G1_compliance_F1", "name": "G1 compliance ratio", "values": ["G1_2_1", "G1_2_2", "G1_2_3", "G1_2_4", "G1_2_5", "G1_2_6"], "dtypes": []})
  survey_analytics.append({"id": "G1_2_F1", "name": "Description of the undertaking's approach to relationships with suppliers, taking into account risks related to supply chain and impacts on sustainability matters.", "values": ["G1_2_5"], "dtypes": ["OPEN"]})
  survey_analytics.append({"id": "G1_2_F2", "name": "Description of how social and environmental criteria are taken into account for selection of supply-side contractual partners.", "values": ["G1_2_6"], "dtypes": ["OPEN"]})

  survey_analytics_dq = []
  for sa_idx, sa in enumerate(survey_analytics):
    if not all([_id in survey_data_ids for _id in sa["values"]]):
      sd_tag = []
      sd_found = []
      drop_sa_ids = []
      for sd in survey_data:
        for _id in sa["values"]:
          if _id in sd["id"]:
            sd_found.append(sd["id"])
            tag = sd.get("tag")
            if tag:
              sd_tag.append(tag)
            break
        if len(sd_found) == len(sa["values"]) and len(sd_found)>0:   # Found all sa values in survey_data
          dynamic_sa_dict = survey_analytics[sa_idx].copy()
          dynamic_sa_dict["id"] = dynamic_sa_dict["id"] + f"__DQ{sd_found[0].split('__DQ')[-1]}"
          dynamic_sa_dict["values"] = sd_found
          dynamic_sa_dict["tag"] = next(iter(set(sd_tag)), None)
          survey_analytics_dq.append(dynamic_sa_dict)
          drop_sa_ids.append(sa_idx)
          sd_found = []
          sd_tag = []
    else:
      survey_analytics_dq.append(sa)


  data = {
      "board_id": board_id,
      "survey_id": survey_id,
      "external_organisation": external_organisation_name,
      "survey_data": survey_data,
      "survey_analytics": survey_analytics_dq,
      "survey_uploads": [],
      "max_responses": {"count": "1", "date_period": "year", "column_title": "Fiscal year"},
      "wekan_data": {
          "card_title": card_title,
          "card_description": card_description
  
      },
      # "email_data": email_data,
      "aux_data": [
      ],
      "guest_member": guest_member,
    }


  # send data to django
  final_screen
  reponse_status_code, response_content = store_interview_results(data)
  if reponse_status_code == 200:
    define('error_screen', False) 
    command('exit', url=redirect_url)
  else:
    error_screen
--- 
progress: 0
question: |
  Does the undertaking have a policy to prevent late payments, especially to SMEs? 
help:
  label: Help?
  heading: <BR><h6>Explanation</h6>
  content: |
    AR 2. For purposes of this standard, management of relationships with the undertaking’s suppliers may include the following&#58;
    (a)
    how the undertaking’s practices, including activities to avoid or minimise the impacts of disruptions to its supply chain, support its strategy and risk management;
    (b)
    training of the undertaking’s procurement/supply chain workforce on engagement and dialogue with suppliers as well as incentives of its procurement workforce including whether such incentives refer to price, quality or sustainability factors;
    (c)
    the screening and evaluation of social and environmental performance of suppliers;
    (d)
    the inclusion of locally based suppliers in its supply chain and/or suppliers with
    certification;
    (e)
    how the undertaking’s practices deal with vulnerable suppliers;
    (f)
    the undertaking’s targets and actions with regard to communication and
    management of relationships with suppliers; and
    (g)
    how the outcomes of these practices are evaluated, including supplier visits, audits or surveys.
    AR 3. &#x27;Vulnerable suppliers’ includes suppliers that are exposed to significant economic, environmental and/or social risks.
back button: True
fields:
  - no label: G1_2_1
    input type: radio
    required: false
    choices:
      - Yes
      - No
      - Partly
  - "Please explain why there are not any policies in place, if applicable, regarding late payments, supply chain relationships, and partners&#x27; social and environmental policies?": G1_2_2
    required: false
    datatype: text
    js show if: |
      ['No'].includes(val('G1_2_1'))
  - "Please disclose the timeframe in which the undertaking aims to adopt policies.": G1_2_3
    required: false
    datatype: text
    js show if: |
      ['No'].includes(val('G1_2_1'))
  - "Please describe the policy to prevent late payments, especially to SMEs.": G1_2_4
    required: false
    datatype: text
    js show if: |
      ['Yes', 'Partly'].includes(val('G1_2_1'))
--- 
progress: 34
question: |
  Please describe the undertaking&#x27;s approach to relationships with suppliers, taking into account risks related to supply chain and impacts on sustainability matters. 
back button: True
fields:
  - no label: G1_2_5
    datatype: text
    required: false
--- 
progress: 67
question: |
  Please describe how social and environmental criteria are taken into account for selection of supply-side contractual partners. 
back button: True
fields:
  - no label: G1_2_6
    datatype: text
    required: false
---
progress: 0
back button: True
question: |
  Please enter the name of the organisation you represent.
fields:
  - Organisation name: external_organisation_name
    required: false

---
#! Response report before submission
progress: 100
field: final_screen
back button: True
question: |
  Congratulations!
subquestion: |
  All questions have been addressed. Press the submit button below to send in your answers.
continue button label: Submit answers!

---
#! Response report before submission
event: error_screen
prevent going back: True
question: |
  Something went wrong when submitting your answers. 
subquestion: |  
  Please try again or contact <a href="mailto:info@beyondcsrd.se">info@beyondcsrd.se</a> for help.
under: |
  Details: ${ response_content.decode() }
buttons:
  Exit: exit

---

event: require_login_screen
question: |
  Oops! You have been logged out. Please login again.
subquestion: |
  ${ action_button_html(login_url, size='md', color='primary', label='Login', new_window=False) }

---

event: invalid_token_screen
question: |
  Your survey token is invalid. Please contact the administrator to request a new url. 

---