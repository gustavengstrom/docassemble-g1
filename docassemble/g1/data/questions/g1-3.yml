metadata:
  title: |
    ESRS-G1-3
  short title: |
    Governance 1-3&#58; Prevention and detection of corruption and bribery
  show login: False
  description: |
    The undertaking shall provide information about its system to prevent and detect, investigate, and respond to allegations or incidents relating to corruption and bribery including the related training. All questions marked with * are voluntary. If unsure, leave blank. 
  revision_date: 2024-11-25
---
modules:
  - .post
---
features:
  #css: sds.css # local CSS pointer ## goood tutorial for styling da: https://www.youtube.com/watch?v=6a3sER5MOK8
  popover trigger: hover # how to display interactive content/hyperlinks
  bootstrap theme: https://bootswatch.com/5/flatly/bootstrap.min.css
  navigation: True
  progress bar: True
  show progress bar percentage: True
  progressive: True
  inverse navbar: False
  hide navbar: True
  question help button: True
---
field: intro_screen
question: |
  Governance 1-3&#58; Prevention and detection of corruption and bribery
subquestion: |
  The undertaking shall provide information about its system to prevent and detect, investigate, and respond to allegations or incidents relating to corruption and bribery including the related training. All questions marked with * are voluntary. If unsure, leave blank.

  To get started, press **Continue**.
help:
  label: Help?
  heading: <BR><h6>Explanation</h6>
  content: |
    The undertaking shall provide information about its system to prevent and detect, investigate, and respond to allegations or incidents relating to corruption and bribery including the related training.
---
mandatory: True
code: |
  multi_user = True
  guest_member = None

  # Get query params
  board_id = url_args.get("board_id", "")
  survey_id = url_args.get("survey_id", "")
  django_hostname = os.environ.get("DJANGOHOSTNAME")
  redirect_url = f"https://{django_hostname}/pages/{board_id}/{survey_id}/completed/?submitted=1"
  login_url = f"https://{django_hostname}/accounts/login/"

  intro_screen
  validate_status, validate_content = validate_session({"board_id": board_id, "survey_id": survey_id})
  if validate_status != 200:
     invalid_token_screen
  else:
    session_info = json.loads(validate_content)
    guest_member = session_info.get("guest_member")
    external = session_info.get("external")
    if guest_member:
      redirect_url = "https://www.beyondcsrd.se"

  # This is needed so we can filter active interviews on board_id
  session_tags().add(board_id)
  session_tags().add(board_id+"__"+survey_id)

  if external:
    external_organisation_name
  else:
    external_organisation_name = None

  survey_data = []
  survey_data.append({'name': 'Are there procedures in place to prevent, detect, and address allegations or incidents of corruption or bribery?', 'value': G1_3_1 if G1_3_1!='None' else '', 'id': 'G1_3_1', 'answer_type': 'Yes/No/Partly'})
  if not defined('G1_3_2'):
    define('G1_3_2', '_n/a_')
  survey_data.append({'name': 'Please describe the undertaking&#x27;s plans to adopt procedures to prevent, detect, and address allegations or incidents of corruption or bribery.', 'value': G1_3_2, 'id': 'G1_3_2', 'answer_type': 'OPEN', 'condition': 'G1_3_1', 'condition_criteria': 'No'})
  if not defined('G1_3_3'):
    define('G1_3_3', '_n/a_')
  survey_data.append({'name': 'Please disclose the procedures in place to prevent, detect, and address allegations or incidents of corruption or bribery.', 'value': G1_3_3, 'id': 'G1_3_3', 'answer_type': 'OPEN', 'condition': 'G1_3_1', 'condition_criteria': 'Yes/Partly'})
  survey_data.append({'name': 'Are the investigators or investigating committee separate from chain of management involved in prevention and detection of corruption or bribery?', 'value': G1_3_4 if G1_3_4!='None' else '', 'id': 'G1_3_4', 'answer_type': 'Yes/No'})
  survey_data.append({'name': 'Please describe processes to report outcomes to administrative, management and supervisory bodies.', 'value': G1_3_5, 'id': 'G1_3_5', 'answer_type': 'OPEN'})
  survey_data.append({'name': 'How are policies communicated to those for whom they are relevant (prevention and detection of corruption or bribery)?', 'value': G1_3_6, 'id': 'G1_3_6', 'answer_type': 'OPEN'})
  survey_data.append({'name': 'Please describe the nature, scope and depth of anti-corruption or anti-bribery training programmes offered or required.', 'value': G1_3_7, 'id': 'G1_3_7', 'answer_type': 'OPEN'})
  survey_data.append({'name': 'Please disclose the percentage of functions-at-risk that are covered by training programmes.', 'value': G1_3_8, 'id': 'G1_3_8', 'answer_type': 'PERCENT'})
  survey_data.append({'name': 'To what extent are trainings relating to anti-corruption or anti-bribery given to members of administrative, supervisory and management bodies?', 'value': G1_3_9, 'id': 'G1_3_9', 'answer_type': 'OPEN'})
  survey_data.append({'name': 'Please describe the undertaking&#x27;s training activities by, for example, region of training or category?', 'value': G1_3_10, 'id': 'G1_3_10', 'answer_type': 'OPEN'})
  survey_data.append({'name': 'Please provide an analysis of trainings on corruption or bribery, by, for example, region of training or category?*', 'value': G1_3_11, 'id': 'G1_3_11', 'answer_type': 'OPEN'})

  card_title = 'g1-3'
  card_description = ''
  # Description section in the wekan board - need to be composed with markdown and be populated with datapartner_url from the intervfile_uploadsiew.
  card_title = f"{card_title}"
  card_description = f"{card_description}"
  
  email_title = 'g1-3'
  #! Email compose for outgoing email.
  email_body = f"Dear Partner, <br> <br> This is an automated message to confirm we have recieved the form - {email_title}.  <br> <br> Best regards <br> reportAll Team."
  
  email_data = [
      {
          "subject": email_title,
          "body": email_body,
          "recipients": [],
          "from": "info@reportall.se",
      }
  ]

  survey_data_ids = [d['id'] for d in survey_data]
  survey_analytics = []
  survey_analytics.append({"id": "G1_compliance_F1", "name": "G1 compliance ratio", "values": ["G1_3_1", "G1_3_2", "G1_3_3", "G1_3_4", "G1_3_5", "G1_3_6", "G1_3_7", "G1_3_8", "G1_3_9", "G1_3_10", "G1_3_11"], "dtypes": []})

  survey_analytics_dq = []
  for sa_idx, sa in enumerate(survey_analytics):
    if not all([_id in survey_data_ids for _id in sa["values"]]):
      sd_tag = []
      sd_found = []
      drop_sa_ids = []
      for sd in survey_data:
        for _id in sa["values"]:
          if _id in sd["id"]:
            sd_found.append(sd["id"])
            tag = sd.get("tag")
            if tag:
              sd_tag.append(tag)
            break
        if len(sd_found) == len(sa["values"]) and len(sd_found)>0:   # Found all sa values in survey_data
          dynamic_sa_dict = survey_analytics[sa_idx].copy()
          dynamic_sa_dict["id"] = dynamic_sa_dict["id"] + f"__DQ{sd_found[0].split('__DQ')[-1]}"
          dynamic_sa_dict["values"] = sd_found
          dynamic_sa_dict["tag"] = next(iter(set(sd_tag)), None)
          survey_analytics_dq.append(dynamic_sa_dict)
          drop_sa_ids.append(sa_idx)
          sd_found = []
          sd_tag = []
    else:
      survey_analytics_dq.append(sa)


  data = {
      "board_id": board_id,
      "survey_id": survey_id,
      "external_organisation": external_organisation_name,
      "survey_data": survey_data,
      "survey_analytics": survey_analytics_dq,
      "survey_uploads": [],
      "max_responses": {"count": "1", "date_period": "year", "column_title": "Fiscal year"},
      "wekan_data": {
          "card_title": card_title,
          "card_description": card_description
  
      },
      # "email_data": email_data,
      "aux_data": [
      ],
      "guest_member": guest_member,
    }


  # send data to django
  final_screen
  reponse_status_code, response_content = store_interview_results(data)
  if reponse_status_code == 200:
    define('error_screen', False) 
    command('exit', url=redirect_url)
  else:
    error_screen
--- 
progress: 0
question: |
  Are there procedures in place to prevent, detect, and address allegations or incidents of corruption or bribery? 
help:
  label: Help?
  heading: <BR><h6>Explanation</h6>
  content: |
    AR 5.
    Disclosures may include details about the risk assessments and/or mapping, as well as monitoring programmes and/or internal control procedures performed by the undertaking to detect corruption and bribery.
    AR 6.
    The undertaking’s policies on corruption and bribery may be relevant to specific groups of people, either because they are expected to implement them (for example, the undertaking’s employees, contractors and suppliers), or because they have a direct interest in their implementation (for example, value chain workers, investors). The undertaking may disclose the communication tools and channels (e.g., flyers, newsletters, dedicated websites, social media, face to face interactions, unions and/or workers representatives) to communicate policies to such groups. This may also include the identification and/or removal of potential barriers to dissemination, such as through translation into relevant languages or the use of graphic depictions.
back button: True
fields:
  - no label: G1_3_1
    input type: radio
    required: false
    choices:
      - Yes
      - No
      - Partly
  - "Please describe the undertaking&#x27;s plans to adopt procedures to prevent, detect, and address allegations or incidents of corruption or bribery.": G1_3_2
    required: false
    datatype: text
    js show if: |
      ['No'].includes(val('G1_3_1'))
  - "Please disclose the procedures in place to prevent, detect, and address allegations or incidents of corruption or bribery.": G1_3_3
    required: false
    datatype: text
    js show if: |
      ['Yes', 'Partly'].includes(val('G1_3_1'))
--- 
progress: 12
question: |
  Are the investigators or investigating committee separate from chain of management involved in prevention and detection of corruption or bribery? 
back button: True
fields:
  - no label: G1_3_4
    input type: radio
    required: false
    choices:
      - Yes
      - No
--- 
progress: 23
question: |
  Please describe processes to report outcomes to administrative, management and supervisory bodies. 
back button: True
fields:
  - no label: G1_3_5
    datatype: text
    required: false
--- 
progress: 34
question: |
  How are policies communicated to those for whom they are relevant (prevention and detection of corruption or bribery)? 
back button: True
fields:
  - no label: G1_3_6
    datatype: text
    required: false
--- 
progress: 45
question: |
  Please describe the nature, scope and depth of anti-corruption or anti-bribery training programmes offered or required. 
back button: True
fields:
  - no label: G1_3_7
    datatype: text
    required: false
--- 
progress: 56
question: |
  Please disclose the percentage of functions-at-risk that are covered by training programmes. 
help:
  label: Help?
  heading: <BR><h6>Explanation</h6>
  content: |
    AR 4
back button: True
fields:
  - no label: G1_3_8
    datatype: number
    required: false
--- 
progress: 67
question: |
  To what extent are trainings relating to anti-corruption or anti-bribery given to members of administrative, supervisory and management bodies? 
back button: True
fields:
  - no label: G1_3_9
    datatype: text
    required: false
--- 
progress: 78
question: |
  Please describe the undertaking&#x27;s training activities by, for example, region of training or category? 
back button: True
fields:
  - no label: G1_3_10
    datatype: text
    required: false
--- 
progress: 89
question: |
  Please provide an analysis of trainings on corruption or bribery, by, for example, region of training or category?* 
help:
  label: Help?
  heading: <BR><h6>Explanation</h6>
  content: |
    AR 7
back button: True
fields:
  - no label: G1_3_11
    datatype: text
    required: false
---
progress: 0
back button: True
question: |
  Please enter the name of the organisation you represent.
fields:
  - Organisation name: external_organisation_name
    required: false

---
#! Response report before submission
progress: 100
field: final_screen
back button: True
question: |
  Congratulations!
subquestion: |
  All questions have been addressed. Press the submit button below to send in your answers.
continue button label: Submit answers!

---
#! Response report before submission
event: error_screen
prevent going back: True
question: |
  Something went wrong when submitting your answers. 
subquestion: |  
  Please try again or contact <a href="mailto:info@beyondcsrd.se">info@beyondcsrd.se</a> for help.
under: |
  Details: ${ response_content.decode() }
buttons:
  Exit: exit

---

event: require_login_screen
question: |
  Oops! You have been logged out. Please login again.
subquestion: |
  ${ action_button_html(login_url, size='md', color='primary', label='Login', new_window=False) }

---

event: invalid_token_screen
question: |
  Your survey token is invalid. Please contact the administrator to request a new url. 
subquestion: |
  ${ action_button_html(login_url, size='md', color='primary', label='Login', new_window=False) }

---